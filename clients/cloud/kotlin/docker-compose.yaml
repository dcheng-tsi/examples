---
version: '3'

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:6.2.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "32181:32181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 32181
            ZOOKEEPER_TICK_TIME: 2000

    kafka:
        image: confluentinc/cp-enterprise-kafka:6.2.0
        hostname: kafka
        container_name: kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        working_dir: /data
        volumes:
            - ./data:/data

    schema-registry:
        image: confluentinc/cp-schema-registry:6.2.0
        hostname: schema-registry
        container_name: schema-registry
        depends_on:
            - zookeeper
            - kafka
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
            SCHEMA_REGISTRY_LISTENER: http://localhost:8081
        ports:
            - "8081:8081"

    ksqldb-server:
        image: confluentinc/ksqldb-server:0.21.0
        hostname: ksqldb-server
        container_name: ksqldb-server
        command: [ "ksql-server-start", "/etc/ksqldb-server/server.properties" ]
        depends_on:
            - kafka
            - schema-registry
        ports:
            - "8088:8088"
        environment:
            KSQL_CONFIG_DIR: "/etc/ksqldb"
            KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksqldb/log4j.properties"
            KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
            KSQL_HOST_NAME: ksqldb-server
            KSQL_LISTENERS: "http://0.0.0.0:8088"
            KSQL_CACHE_MAX_BYTES_BUFFERING: 0
            KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
            KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
        volumes:
            - ./scripts/ksqldb-server:/etc/ksqldb-server

    # without custom configs
    # docker-compose exec ksqldb-cli ksql http://ksqldb-server:8088
    #
    # with custom configs
    # docker-compose exec ksqldb-cli ksql http://ksqldb-server:8088 --config-file /etc/ksqldb-cli/cli.properties
    ksqldb-cli:
        image: confluentinc/ksqldb-cli:0.21.0
        container_name: ksqldb-cli
        command: [ "ksql", "http://ksqldb-server:8088", "--config-file", "/etc/ksqldb-cli/cli.properties" ]
        depends_on:
            - kafka
            - ksqldb-server
        entrypoint: /bin/sh
        tty: true
        environment:
            KSQL_CONFIG_DIR: "/etc/ksqldb"
        volumes:
            - ./scripts/ksqldb-cli:/etc/ksqldb-cli
            - ./scripts/ksql:/etc/ksql

    control-center:
        image: confluentinc/cp-enterprise-control-center:6.1.1
        hostname: control-center
        container_name: control-center
        depends_on:
            - kafka
            - schema-registry
            - ksqldb-server
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
            CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
            CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021
